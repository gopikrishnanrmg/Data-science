load("~/R project/World happiness report/backupsc2.RData")
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.,data = train.df,importance=TRUE)
result2<-predict(lm2,valid.df)
plot(valid.df$Happiness.Score,result2)
value<-(result2-valid.df$Happiness.Score)^2
sum(value)#13.89 after removing generosity discard
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,test.df)
plot(test.df$Happiness.Score,result2)
value<-(result2-test.df$Happiness.Score)^2
sum(value)#6
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,test.df)
plot(test.df$Happiness.Score,result2)
value<-(result2-test.df$Happiness.Score)^2
sum(value)#6
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,test.df)
plot(test.df$Happiness.Score,result2)
value<-(result2-test.df$Happiness.Score)^2
sum(value)#6
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,test.df)
plot(test.df$Happiness.Score,result2)
value<-(result2-test.df$Happiness.Score)^2
sum(value)#6
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,test.df)
plot(test.df$Happiness.Score,result2)
value<-(result2-test.df$Happiness.Score)^2
sum(value)#6
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,test.df)
plot(test.df$Happiness.Score,result2)
value<-(result2-test.df$Happiness.Score)^2
sum(value)#6
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,test.df)
plot(test.df$Happiness.Score,result2)
value<-(result2-test.df$Happiness.Score)^2
sum(value)#6
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,test.df)
plot(test.df$Happiness.Score,result2)
value<-(result2-test.df$Happiness.Score)^2
sum(value)#6
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,test.df)
plot(test.df$Happiness.Score,result2)
value<-(result2-test.df$Happiness.Score)^2
sum(value)#6
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,test.df)
plot(test.df$Happiness.Score,result2)
value<-(result2-test.df$Happiness.Score)^2
sum(value)#6
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,test.df)
plot(test.df$Happiness.Score,result2)
value<-(result2-test.df$Happiness.Score)^2
sum(value)#6
source('~/R project/World happiness report/script2.R')
lm1<-lm(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df)
lm1#linear regression
result1<-predict(lm1,valid.df)
result1
plot(valid.df$Happiness.Score,result1)
value<-(result1-valid.df$Happiness.Score)^2
sum(value)#19.14
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
lm2#randomforest
lm2$importance#which parameter influences the most
result2<-predict(lm2,valid.df)
result2
plot(valid.df$Happiness.Score,result2)
value<-(result2-valid.df$Happiness.Score)^2
sum(value)#17.52
lm3<-party::ctree(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df)
lm3#party
plot(lm3)
result3<-predict(lm3,train.df)
result3
plot(train.df$Happiness.Score,result3)
value<-(result3-train.df$Happiness.Score)^2
sum(value)#65.11
lm1<-lm(Happiness.Score~(Economy..GDP.per.Capita.)^3+(Family)^2+(Health..Life.Expectancy.)^3+Freedom+Trust..Government.Corruption.+Generosity,data = train.df)
result1<-predict(lm1,valid.df)
plot(valid.df$Happiness.Score,result1)
value<-(result1-valid.df$Happiness.Score)^2
sum(value)#19.14 no change
lm2<-randomForest::randomForest(Happiness.Score~(Economy..GDP.per.Capita.)^3+(Family)^2+(Health..Life.Expectancy.)^3+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,valid.df)
plot(valid.df$Happiness.Score,result2)
value<-(result2-valid.df$Happiness.Score)^2
sum(value)#18 #discard, made model worse earlier was 17
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,test.df)
plot(test.df$Happiness.Score,result2)
value<-(result2-test.df$Happiness.Score)^2
sum(value)#6
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,test.df)
plot(test.df$Happiness.Score,result2)
value<-(result2-test.df$Happiness.Score)^2
sum(value)#6
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,test.df)
plot(test.df$Happiness.Score,result2)
value<-(result2-test.df$Happiness.Score)^2
sum(value)#6
sum(value)#18 #discard, made model worse earlier was 17
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,test.df)
plot(test.df$Happiness.Score,result2)
value<-(result2-test.df$Happiness.Score)^2
sum(value)#6
source('~/R project/World happiness report/script2.R')
plot(valid.df$Happiness.Score,result2)
lm1<-lm(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df)
lm1#linear regression
result1<-predict(lm1,valid.df)
result1
plot(valid.df$Happiness.Score,result1)
value<-(result1-valid.df$Happiness.Score)^2
sum(value)#19.14
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
lm2#randomforest
lm2$importance#which parameter influences the most
result2<-predict(lm2,valid.df)
result2
plot(valid.df$Happiness.Score,result2)
value<-(result2-valid.df$Happiness.Score)^2
sum(value)#17.52
lm3<-party::ctree(Happiness.Score~(Economy..GDP.per.Capita.)^3+(Family)^2+(Health..Life.Expectancy.)^3+Freedom+Trust..Government.Corruption.+Generosity,data = train.df)
lm3#party
plot(lm3)
result3<-predict(lm3,train.df)
result3
plot(train.df$Happiness.Score,result3)
value<-(result3-train.df$Happiness.Score)^2
sum(value)#68.11
lm1<-lm(Happiness.Score~(Economy..GDP.per.Capita.)^3+(Family)^2+(Health..Life.Expectancy.)^3+Freedom+Trust..Government.Corruption.+Generosity,data = train.df)
result1<-predict(lm1,valid.df)
plot(valid.df$Happiness.Score,result1)
value<-(result1-valid.df$Happiness.Score)^2
sum(value)#19.14 no change
lm2<-randomForest::randomForest(Happiness.Score~(Economy..GDP.per.Capita.)^3+(Family)^2+(Health..Life.Expectancy.)^3+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
result2<-predict(lm2,valid.df)
plot(valid.df$Happiness.Score,result2)
value<-(result2-valid.df$Happiness.Score)^2
sum(value)#18 #discard, made model worse earlier was 17
lm3<-party::ctree(Happiness.Score~(Economy..GDP.per.Capita.)^3+(Family)^2+(Health..Life.Expectancy.)^3+Freedom+Trust..Government.Corruption.+Generosity,data = train.df)
result3<-predict(lm3,train.df)
plot(train.df$Happiness.Score,result3)
value<-(result3-train.df$Happiness.Score)^2
sum(value)#68.11 no change
#tuning model lm2 removing generosity
#lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df,importance=TRUE)
lm2<-randomForest::randomForest(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.,data = train.df,importance=TRUE)
result2<-predict(lm2,valid.df)
plot(valid.df$Happiness.Score,result2)
value<-(result2-valid.df$Happiness.Score)^2
sum(value)#13.89 after removing generosity discard
lm3<-party::ctree(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df)
lm3#party
plot(lm3)
result3<-predict(lm3,train.df)
result3
plot(train.df$Happiness.Score,result3)
value<-(result3-train.df$Happiness.Score)^2
sum(value)#65.11
lm1<-lm(Happiness.Score~Economy..GDP.per.Capita.+Family+Health..Life.Expectancy.+Freedom+Trust..Government.Corruption.+Generosity,data = train.df)
lm1#linear regression
result1<-predict(lm1,valid.df)
result1
plot(valid.df$Happiness.Score,result1)
value<-(result1-valid.df$Happiness.Score)^2
sum(value)#19.14
lm2$importance
?seq_len()
df<-[1,2,9,6,5,0]
df<-{1,2,9,6,5,0}
dfa<-[1,2,9,6,5,0]
dfa<-[1 2 9 6 5 0]
dfa<-["1","2","9","6","5","0]
dfa<-["1","2","9","6","5","0"]
df<-c(1,2,9,6,5,0)
?c
df1<-c(1:5,10.5,"next")
df2<-sample(df)
df2<-sample(df,size=4)
df2<-sample(df,repeat(FALSE))
df2<-sample(df,repeat(TRUE))
df3<-sample(df,repeat(TRUE))
df<-c(sample(1:7))
df<-c(sample(1:7))
df2<-c(sample(1:7,repeat(TRUE)))
df2<-c(sample(1:7,replace = (TRUE)))
df2<-c(sample(1:7,replace = (FALSE)))
df2<-c(sample(1:7,replace = (FALSE)))
df2<-c(sample(1:7,replace = (FALSE)))
df2<-c(sample(1:7,replace = (FALSE)))
df2<-c(sample(1:7,replace = (FALSE)))
df2<-c(sample(1:7,replace = (FALSE)))
df2<-c(sample(1:7,replace = (FALSE)))
df2<-c(sample(1:7,replace = (TRUE)))
df2<-c(sample(1:7,replace = (TRUE)))
df2<-c(sample(1:7,replace = (TRUE)))
samplesize = 0.60 * 5
samplesize = 0.60 * 100
?seq_len()
index = sample( seq_len (100 ), size = 60 )
index = sample(100, size = 60 )
index = sample(100, size = 60 )
index = sample(100, size = 60 )
index = sample(100, size = 60 )
train.df<-read.csv("train.csv",stringsAsFactors = TRUE)
test.df<-read.csv("test.csv",stringsAsFactors = TRUE)
train.df<-read.csv("train.csv",stringsAsFactors = TRUE)
test.df<-read.csv("test.csv",stringsAsFactors = TRUE)
setwd("~/R project/Boston")
train.df<-read.csv("train.csv",stringsAsFactors = TRUE)
test.df<-read.csv("test.csv",stringsAsFactors = TRUE)
View(test.df)
View(test.df)
View(train.df)
View(train.df)
install.packages("randomForest")
install.packages("neuralnet")
install.packages("party")
is.null(train.df)
str(train.df)
summary(train.df)
set.seed(123)
hist(train.df$medv)
maxvalue<-apply(train,df, 2,max)
maxvalue<-apply(train.df, 2,max)
minvalue<-apply(train.df, 2,min)
library(neuralnet)
